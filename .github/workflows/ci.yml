name: C++ CI

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os-arch: aarch64
    env:
      CROSS_SYSROOT: /mnt/alpine-${{ matrix.os-arch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Alpine Linux for aarch64
        id: alpine-target
        uses: jirutka/setup-alpine@v1
        with:
          arch: aarch64
          branch: v3.15
          packages: >
            build-base
            cmake
            g++
            alpine-sdk
            boost-dev
          shell-name: alpine-target.sh

      - name: Set up Alpine Linux for x86_64 (build arch)
        uses: jirutka/setup-alpine@v1
        with:
          arch: x86_64
          packages: >
            build-base
            cmake
            g++
            alpine-sdk
            boost-dev
            abuild
          volumes: ${{ steps.alpine-target.outputs.root-path }}:${{ env.CROSS_SYSROOT }}
          shell-name: alpine.sh

      - name: Create package directory
        run: mkdir -p /home/runner/package

      - name: Configure CMake
        run: |
          mkdir -p /home/runner/package/build
          cd /home/runner/package/build
          alpine.sh --root /home/runner/package cmake .. -DPATCH_VERSION=${{ github.run_number }}

      - name: Build
        run: |
          cd /home/runner/package/build
          alpine.sh --root /home/runner/package cmake --build .

      - name: Run tests
        run: |
          cd /home/runner/package/build
          alpine.sh --root /home/runner/package cmake --build . --target test

      - name: Package
        run: |
          cd /home/runner/package/build
          alpine.sh --root /home/runner/package cmake --build . --target package
          abuild -r --root /home/runner/package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/package/*.apk
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.apk
          asset_content_type: application/vnd.android.package-archive
